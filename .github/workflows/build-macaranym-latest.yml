name: Build macOS package from MacAranym-Latest.xcodeproj

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and upload diskimage
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install the Apple certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Xcode version
        run: /usr/bin/xcodebuild -version
        
      - name: Install Prerequisites
        run:  .github/install_prereq_macos.sh
      
      - name: Build
        env:
          DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
        run: |
          if [ "x$DEVELOPMENT_TEAM" != "x" ]; then
            CODE_SIGN_IDENTITY="Developer ID Application"
          else
            CODE_SIGN_IDENTITY=" "
          fi
          xcodebuild build -project src/Unix/MacOSX/MacAranym-latest.xcodeproj -target Packaging -configuration Release CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" CODE_SIGN_INJECT_BASE_ENTITLEMENTS=NO DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM"

      - name: Notarize diskimage
        env:
          AC_ACCOUNT: ${{ secrets.AC_ACCOUNT }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
        run: |
          cd src/Unix/MacOSX/build/Release/
          xcrun notarytool submit aranym-*.dmg --apple-id "$AC_ACCOUNT" --password "$AC_PASSWORD" --team-id "$DEVELOPMENT_TEAM" --wait
          xcrun stapler staple aranym-*.dmg

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: MacAranym disk image
          path: src/Unix/MacOSX/build/Release/aranym-*.dmg

      - name: Clean up keychain
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db